// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Transpiler More complex 1`] = `
"var _$f = \\"eval\\";
if (arguments.length < 2) {
	foo = ejs;
	ejs = (typeof global != \\"undefined\\" && global.ejs) || (typeof window != \\"undefined\\" && window.ejs);
	if(!ejs) return Promise.reject(new Error(\\"EJS module is not loaded\\"));
	ejs = new ejs({\\"strict\\":false,\\"localsName\\":\\"foo\\"});
}
foo = foo || {};
var include = ejs.include.bind(ejs, foo, \\"eval\\");
var _$e = ejs.output();
var layout = ejs.layout.bind(ejs, foo, \\"eval\\", _$e);
var block = ejs.block.bind(ejs, foo);
with(foo) {
	_$e.echo = \`
OK, so have fun! :D
-------------------
\`;

    var fruits = [\\"Apple\\", \\"Pear\\", \\"Orange\\", \\"Lemon\\"]
      , random = \\" \\".repeat(198).split(\\"\\").map(x => Math.random())
      ;
;
	_$e.echo = \`

These fruits are amazing:
\`;
 for(var i = 0; i < fruits.length; ++i) { ;
	_$e.echo = \`
  - \`;
	_$e.safe =  fruits[i] ;
	_$e.echo = \`s
\`;
 } ;
	_$e.echo = \`
Let's see some random numbers:

\`;
 
  random.forEach(function(c, i) {
;
	_$e.echo = \` \`;
	_$e.safe =  c.toFixed(10) + ((i + 1) % 6 === 0 ? \\"\\\\n\\": \\"\\") ;

  });
;
	_$e.echo = \`

Hello \`;
	_$e.safe =  locals.name ;
	_$e.echo = \` !
    \`;
}
return _$e.output;
//@ sourceURL=eval"
`;

exports[`Transpiler Simple case / strict mode 1`] = `
"\\"use strict\\";
var _$f = \\"eval\\";
if (arguments.length < 2) {
	fooBar = ejs;
	ejs = (typeof global != \\"undefined\\" && global.ejs) || (typeof window != \\"undefined\\" && window.ejs);
	if(!ejs) return Promise.reject(new Error(\\"EJS module is not loaded\\"));
	ejs = new ejs({\\"strict\\":true,\\"localsName\\":\\"fooBar\\"});
}
fooBar = fooBar || {};
var include = ejs.include.bind(ejs, fooBar, \\"eval\\");
var _$e = ejs.output();
var layout = ejs.layout.bind(ejs, fooBar, \\"eval\\", _$e);
var block = ejs.block.bind(ejs, fooBar);
	_$e.echo = \`
    <foo> <%%
    \`;
	/*  comment */
	_$e.echo = \`
\`;
 if (foo == \\"%>\\\\\\"%>\\") { ;
	_$e.echo = \`      \`;
	_$e.safe =  bar ;
	_$e.echo = \`
    \`;
 } ;
	_$e.echo = \`
    </foo>
    \`;
return _$e.output;
//@ sourceURL=eval"
`;

exports[`Transpiler Simple case 1`] = `
"var _$f = \\"eval\\";
if (arguments.length < 2) {
	foo = ejs;
	ejs = (typeof global != \\"undefined\\" && global.ejs) || (typeof window != \\"undefined\\" && window.ejs);
	if(!ejs) return Promise.reject(new Error(\\"EJS module is not loaded\\"));
	ejs = new ejs({\\"strict\\":false,\\"localsName\\":\\"foo\\"});
}
foo = foo || {};
var include = ejs.include.bind(ejs, foo, \\"eval\\");
var _$e = ejs.output();
var layout = ejs.layout.bind(ejs, foo, \\"eval\\", _$e);
var block = ejs.block.bind(ejs, foo);
with(foo) {
	_$e.echo = \`
    <foo> <%%
    \`;
	/*  comment */
	_$e.echo = \`
\`;
 if (foo == \\"%>\\\\\\"%>\\") { ;
	_$e.echo = \`      \`;
	_$e.safe =  bar ;
	_$e.echo = \`
    \`;
 } ;
	_$e.echo = \`
    </foo>
    \`;
}
return _$e.output;
//@ sourceURL=eval"
`;

exports[`Transpiler Template with redirected output 1`] = `
"\\"use strict\\";
var _$f = \\"eval\\";
if (arguments.length < 2) {
	_ = ejs;
	ejs = (typeof global != \\"undefined\\" && global.ejs) || (typeof window != \\"undefined\\" && window.ejs);
	if(!ejs) return Promise.reject(new Error(\\"EJS module is not loaded\\"));
	ejs = new ejs({\\"strict\\":true,\\"localsName\\":\\"_\\"});
}
_ = _ || {};
var include = ejs.include.bind(ejs, _, \\"eval\\");
var _$e = ejs.output();
var layout = ejs.layout.bind(ejs, _, \\"eval\\", _$e);
var block = ejs.block.bind(ejs, _);
	_$e.echo = \`
      \`;
	_$e.echo =  include('foo', {
          contents: function() {\\"use strict\\";
var _$e = ejs.output();
	_$e.echo = \`
            Hello world
          \`;
 return _$e.output;
}
        })
      ;
	_$e.echo = \`
    \`;
return _$e.output;
//@ sourceURL=eval"
`;
